// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaServicios.Api.ShoppingCart.Persistence;

#nullable disable

namespace TiendaServicios.Api.ShoppingCart.Migrations
{
    [DbContext(typeof(ShoppingCartContext))]
    partial class ShoppingCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TiendaServicios.Api.ShoppingCart.Model.ShoppingCartDetailModel", b =>
                {
                    b.Property<int>("ShoppingCartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartDetailId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartDetailId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartDetails", (string)null);
                });

            modelBuilder.Entity("TiendaServicios.Api.ShoppingCart.Model.ShoppingCartModel", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ShoppingCartId");

                    b.ToTable("ShoppingCarts", (string)null);
                });

            modelBuilder.Entity("TiendaServicios.Api.ShoppingCart.Model.ShoppingCartDetailModel", b =>
                {
                    b.HasOne("TiendaServicios.Api.ShoppingCart.Model.ShoppingCartModel", "ShoppingCart")
                        .WithMany("DetailsList")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("TiendaServicios.Api.ShoppingCart.Model.ShoppingCartModel", b =>
                {
                    b.Navigation("DetailsList");
                });
#pragma warning restore 612, 618
        }
    }
}
